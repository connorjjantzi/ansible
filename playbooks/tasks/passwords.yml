- name: Clone password store
  tags:
    - passwords
  block:
    - name: Install packages
      become: true
      community.general.pacman:
        name:
          - pass
          - passff-host
          - gnupg
          - pinentry
          - python-pexpect

    - name: Clone password store repo
      ansible.builtin.git:
        repo: git@github.com:connorjjantzi/password-store.git
        dest: "{{ ansible_env.HOME }}/.password-store"
        accept_hostkey: true
        update: true
        version: master

    - name: Clone gpg key repo
      ansible.builtin.git:
        repo: git@github.com:connorjjantzi/gpg-key.git
        dest: "{{ ansible_env.HOME }}/.gpg-key"
        accept_hostkey: true
        update: true
        version: master

    - name: Decrypt private key
      ansible.builtin.copy:
        src: "{{ ansible_env.HOME }}/.gpg-key/private.pgp"
        dest: "{{ ansible_env.HOME }}/.gpg-key/private-decrypted.pgp"
        mode: "0600"

    - name: Add gpg private and public keys
      ansible.builtin.shell: |
        gpg --pinentry-mode loopback --passphrase {{ gpg_secret }} --import {{ ansible_env.HOME }}/.gpg-key/private-decrypted.pgp
        gpg --import {{ ansible_env.HOME }}/.gpg-key/public.pgp
        rm -rf {{ ansible_env.HOME }}/.gpg-key
      args:
        removes: "{{ ansible_env.HOME }}/.gpg-key"

    - name: Edit trust level of gpg key
      ansible.builtin.expect:
        command: gpg --edit-key {{ gpg_email }} trust save
        responses:
          ".*Your decision.*": "5"
          ".*Do you really want to set this key to ultimate trust.*": "y"

    - name: Switch gpg pinentry-curses to pinentry-qt5
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.gnupg/gpg-agent.conf"
        line: "pinentry-program /usr/bin/pinentry-qt5"
        create: true
        mode: "0644"
